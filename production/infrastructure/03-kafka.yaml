apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-env
  namespace: infrastructure
data:
  KAFKA_BROKER_ID: "1"
  KAFKA_kafka_CONNECT: 'kafka:2181'
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
  KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
  KAFKA_LISTENERS: 'PLAINTEXT://:29092,PLAINTEXT_HOST://:9092'
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  KAFKA_DELETE_TOPIC_ENABLE: 'true'
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: infrastructure
  labels:
    stage: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      stage: production
  template:
    metadata:
      labels:
        app: kafka
        stage: production
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka
          imagePullPolicy: Always
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper.yaml:2181'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
            - name: KAFKA_LISTENERS
              value: 'PLAINTEXT://:29092,PLAINTEXT_HOST://:9092'
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: 'true'
            - name: KAFKA_DELETE_TOPIC_ENABLE
              value: 'true'
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: '1'
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: '0'
          ports:
            - containerPort: 29092
            - containerPort: 9092
            - containerPort: 9101
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: infrastructure
  labels:
    app: kafka
    stage: production
spec:
  type: NodePort
  selector:
    app: kafka
    stage: production
  ports:
    - port: 29092
      name: first
    - port: 9092
      name: second
    - port: 9101
      name: third
